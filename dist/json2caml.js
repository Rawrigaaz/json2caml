/*! json2caml v1.0.0 | (c) Niklas Engblom | MIT License */
!function(){function e(e){if(!e||"object"!=typeof e||e instanceof Array)return void console.error("jsonToCaml only accepts object as a paramter.");var n=e,t=s("view",n);t&&(n=t);var o=s("query",n);if(o&&(n=o),!n||!u())return console.error("Query is not valid. Make sure you have added all required nodes."),null;var c="<View><Query>{query}</Query></View>",l=s("orderBy",n);if(l){var i=[];if(l instanceof Array)for(var d=0,p=l.length;d<p;d++)i.push(r({name:s("name",l[d]),ascending:!!s("ascending",l[d])}));else i.push(r({name:s("name",l),ascending:!!s("ascending",l)}));var m="".concat("<OrderBy>",i.join(""),"</OrderBy>");c=c.replace("{query}",m+"{query}")}var y=s("where",n);return c=c.replace("{query}","<Where>{query}</Where>"),c.replace("{query}",a(y))}function a(e){var o,c,u=s("operator",e).toLowerCase();switch(u){case"and":o="<And>{child}</And>";break;case"or":o="<Or>{child}</Or>";break;case"eq":case"neq":case"gt":case"geq":case"lt":case"leq":case"contains":case"includes":var l=u.charAt(0).toUpperCase()+u.substr(1);o=n({nodeName:l,fieldName:s("name",e),type:s("type",e),value:s("value",e)});break;case"in":var i=s("type",e);o="".concat("<In>",r({name:s("name",e)}),"<Values>",s("values",e).map(function(e){return t({type:i,value:e})}).join(""),"</Values>","</In>");break;case"isnotnull":case"isnull":var l="isnull"==u?"IsNull":"IsNotNull";o="".concat("<",l,">",r({name:s("name",e)}),"</",l,">");break;case"beginswith":case"notincludes":var l="beginswith"==u?"BeginsWith":"NotIncludes";o=n({nodeName:l,fieldName:s("name",e),type:s("type",e),value:s("value",e)});break;case"daterangesoverlap":o="".concat("<DateRangesOverlap>",s("fieldRefs",e).map(function(e){return r({name:e})}).join(""),t({type:"DateTime",value:"Now"}),"</DateRangesOverlap>");break;case"membership":o="".concat('<Membership Type="',s("type",e),'">',r({name:s("name",e)}),"</Membership>");break;default:throw new Error("Invalid operator: "+u)}if(c=s("nested",e)){if(2!=c.length)throw new Error("Nested property must have (only) two objects. Used operator: "+u+".");o=o.replace("{child}",[a(c[0]),a(c[1])].join(""))}return o}function n(e){return"".concat("<",e.nodeName,">",r({name:e.fieldName}),t({type:e.type,value:e.value}),"</",e.nodeName,">")}function r(e){return e.nodeName="FieldRef",e.closeTag=!0,c(e)}function t(e){var a;switch(e.type){case"Text":a="<![CDATA["+e.value+"]]>";break;case"DateTime":a=o(e.value);break;default:a=e.value}return"".concat('<Value Type="',e.type,'"',e.includeTimeValue?' IncludeTimeValue="true"':"",">",a,"</Value>")}function o(e){return"now"==e.toLowerCase()?e="<Now />":"today"==e.toLowerCase()?e="<Today />":"month"==e.toLowerCase()&&(e="<Month />"),e}function c(e){return"".concat("<",e.nodeName," ",Object.keys(e).map(function(a){return"nodeName"==a||"closeTag"==a?"":"".concat(a.charAt(0).toUpperCase(),a.substr(1),'="',e[a],'" ')}).join(""),e.closeTag?"/>":"")}function s(e,a){var n=Object.keys(a).filter(function(a){return a.toLowerCase()==e.toLowerCase()});return n.length?a[n[0]]:void 0}function u(){return!0}"undefined"!=typeof module&&module.exports?module.exports=e:window.json2caml=e}();